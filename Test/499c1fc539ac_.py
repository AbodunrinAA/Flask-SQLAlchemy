"""empty message

Revision ID: 499c1fc539ac
Revises: 
Create Date: 2019-10-18 21:27:53.319031

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = '499c1fc539ac'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.Column('number', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('produce_date', sa.DateTime(), nullable=True),
    sa.Column('expire_date', sa.DateTime(), nullable=True),
    sa.Column('price', sa.Float(precision=5), nullable=True),
    sa.Column('store_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['Stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('IX_BranchCouncils_StateCouncilId', table_name='BranchCouncils')
    op.drop_table('BranchCouncils')
    op.drop_table('MaritalStatuses')
    op.drop_table('NationalCouncils')
    op.drop_table('Positions')
    op.drop_index('EmailIndex', table_name='AspNetUsers')
    op.drop_index('IX_AspNetUsers_BranchId', table_name='AspNetUsers')
    op.drop_index('IX_AspNetUsers_GenderId', table_name='AspNetUsers')
    op.drop_index('IX_AspNetUsers_InitialId', table_name='AspNetUsers')
    op.drop_index('IX_AspNetUsers_MaritalStatusId', table_name='AspNetUsers')
    op.drop_index('IX_AspNetUsers_PositionId', table_name='AspNetUsers')
    op.drop_table('AspNetUsers')
    op.drop_table('AspNetUserTokens')
    op.drop_index('IX_StateCouncils_NationalCouncilId', table_name='StateCouncils')
    op.drop_table('StateCouncils')
    op.drop_table('AspNetRoles')
    op.drop_index('IX_AspNetRoleClaims_RoleId', table_name='AspNetRoleClaims')
    op.drop_table('AspNetRoleClaims')
    op.drop_table('Initials')
    op.drop_table('Genders')
    op.drop_index('IX_Qualifications_ApplicationUserId1', table_name='Qualifications')
    op.drop_table('Qualifications')
    op.drop_index('IX_AspNetUserLogins_UserId', table_name='AspNetUserLogins')
    op.drop_table('AspNetUserLogins')
    op.drop_index('IX_AspNetUserRoles_RoleId', table_name='AspNetUserRoles')
    op.drop_table('AspNetUserRoles')
    op.drop_table('__EFMigrationsHistory')
    op.drop_index('IX_AspNetUserClaims_UserId', table_name='AspNetUserClaims')
    op.drop_table('AspNetUserClaims')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AspNetUserClaims',
    sa.Column('Id', sa.INTEGER(), autoincrement=True, nullable=False, mssql_identity_start=1, mssql_identity_increment=1),
    sa.Column('UserId', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('ClaimType', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ClaimValue', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserClaims_AspNetUsers_UserId'),
    sa.PrimaryKeyConstraint('Id', name='PK_AspNetUserClaims')
    )
    op.create_index('IX_AspNetUserClaims_UserId', 'AspNetUserClaims', ['UserId'], unique=False)
    op.create_table('__EFMigrationsHistory',
    sa.Column('MigrationId', sa.NVARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('ProductVersion', sa.NVARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('MigrationId', name='PK___EFMigrationsHistory')
    )
    op.create_table('AspNetUserRoles',
    sa.Column('UserId', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('RoleId', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['RoleId'], ['AspNetRoles.Id'], name='FK_AspNetUserRoles_AspNetRoles_RoleId'),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserRoles_AspNetUsers_UserId'),
    sa.PrimaryKeyConstraint('RoleId', 'UserId', name='PK_AspNetUserRoles')
    )
    op.create_index('IX_AspNetUserRoles_RoleId', 'AspNetUserRoles', ['RoleId'], unique=False)
    op.create_table('AspNetUserLogins',
    sa.Column('LoginProvider', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('ProviderKey', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('ProviderDisplayName', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('UserId', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserLogins_AspNetUsers_UserId'),
    sa.PrimaryKeyConstraint('LoginProvider', 'ProviderKey', name='PK_AspNetUserLogins')
    )
    op.create_index('IX_AspNetUserLogins_UserId', 'AspNetUserLogins', ['UserId'], unique=False)
    op.create_table('Qualifications',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('File', mssql.VARBINARY(), autoincrement=False, nullable=True),
    sa.Column('ApplicationUserId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('ApplicationUserId1', sa.NVARCHAR(length=450), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ApplicationUserId1'], ['AspNetUsers.Id'], name='FK_Qualifications_AspNetUsers_ApplicationUserId1'),
    sa.PrimaryKeyConstraint('Id', name='PK_Qualifications')
    )
    op.create_index('IX_Qualifications_ApplicationUserId1', 'Qualifications', ['ApplicationUserId1'], unique=False)
    op.create_table('Genders',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('Id', name='PK_Genders')
    )
    op.create_table('Initials',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('Id', name='PK_Initials')
    )
    op.create_table('AspNetRoleClaims',
    sa.Column('Id', sa.INTEGER(), autoincrement=True, nullable=False, mssql_identity_start=1, mssql_identity_increment=1),
    sa.Column('RoleId', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('ClaimType', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ClaimValue', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['RoleId'], ['AspNetRoles.Id'], name='FK_AspNetRoleClaims_AspNetRoles_RoleId'),
    sa.PrimaryKeyConstraint('Id', name='PK_AspNetRoleClaims')
    )
    op.create_index('IX_AspNetRoleClaims_RoleId', 'AspNetRoleClaims', ['RoleId'], unique=False)
    op.create_table('AspNetRoles',
    sa.Column('Id', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('Name', sa.NVARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('NormalizedName', sa.NVARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('ConcurrencyStamp', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('CreationDate', mssql.DATETIME2(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('Id', name='PK_AspNetRoles')
    )
    op.create_table('StateCouncils',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Code', sa.NVARCHAR(length=450), autoincrement=False, nullable=True),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Address', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('PhoneNumber', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('EMail', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Fax', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Latitude', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Longitude', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ApplicationUserId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('NationalCouncilId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['NationalCouncilId'], ['NationalCouncils.Id'], name='FK_StateCouncils_NationalCouncils_NationalCouncilId'),
    sa.PrimaryKeyConstraint('Id', name='PK_StateCouncils')
    )
    op.create_index('IX_StateCouncils_NationalCouncilId', 'StateCouncils', ['NationalCouncilId'], unique=False)
    op.create_table('AspNetUserTokens',
    sa.Column('UserId', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('LoginProvider', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('Name', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('Value', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['AspNetUsers.Id'], name='FK_AspNetUserTokens_AspNetUsers_UserId'),
    sa.PrimaryKeyConstraint('LoginProvider', 'Name', 'UserId', name='PK_AspNetUserTokens')
    )
    op.create_table('AspNetUsers',
    sa.Column('Id', sa.NVARCHAR(length=450), autoincrement=False, nullable=False),
    sa.Column('UserName', sa.NVARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('NormalizedUserName', sa.NVARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('Email', sa.NVARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('NormalizedEmail', sa.NVARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('EmailConfirmed', mssql.BIT(), autoincrement=False, nullable=False),
    sa.Column('PasswordHash', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('SecurityStamp', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ConcurrencyStamp', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('PhoneNumber', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('PhoneNumberConfirmed', mssql.BIT(), autoincrement=False, nullable=False),
    sa.Column('TwoFactorEnabled', mssql.BIT(), autoincrement=False, nullable=False),
    sa.Column('LockoutEnd', mssql.DATETIMEOFFSET(), autoincrement=False, nullable=True),
    sa.Column('LockoutEnabled', mssql.BIT(), autoincrement=False, nullable=False),
    sa.Column('AccessFailedCount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('InitialId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('MembershipId', sa.NVARCHAR(length=450), autoincrement=False, nullable=True),
    sa.Column('FirstName', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('SurName', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('LastName', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Address', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('DateOfBirth', mssql.DATETIME2(), autoincrement=False, nullable=False),
    sa.Column('GenderId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Photo', mssql.VARBINARY(), autoincrement=False, nullable=True),
    sa.Column('DateOfEnrollment', mssql.DATETIME2(), autoincrement=False, nullable=False),
    sa.Column('BranchId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('MaritalStatusId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('PositionId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('IsSuperUser', mssql.BIT(), autoincrement=False, nullable=False),
    sa.Column('IsEnabled', mssql.BIT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['BranchId'], ['BranchCouncils.Id'], name='FK_AspNetUsers_BranchCouncils_BranchId'),
    sa.ForeignKeyConstraint(['GenderId'], ['Genders.Id'], name='FK_AspNetUsers_Genders_GenderId'),
    sa.ForeignKeyConstraint(['InitialId'], ['Initials.Id'], name='FK_AspNetUsers_Initials_InitialId'),
    sa.ForeignKeyConstraint(['MaritalStatusId'], ['MaritalStatuses.Id'], name='FK_AspNetUsers_MaritalStatuses_MaritalStatusId'),
    sa.ForeignKeyConstraint(['PositionId'], ['Positions.Id'], name='FK_AspNetUsers_Positions_PositionId'),
    sa.PrimaryKeyConstraint('Id', name='PK_AspNetUsers')
    )
    op.create_index('IX_AspNetUsers_PositionId', 'AspNetUsers', ['PositionId'], unique=False)
    op.create_index('IX_AspNetUsers_MaritalStatusId', 'AspNetUsers', ['MaritalStatusId'], unique=False)
    op.create_index('IX_AspNetUsers_InitialId', 'AspNetUsers', ['InitialId'], unique=False)
    op.create_index('IX_AspNetUsers_GenderId', 'AspNetUsers', ['GenderId'], unique=False)
    op.create_index('IX_AspNetUsers_BranchId', 'AspNetUsers', ['BranchId'], unique=False)
    op.create_index('EmailIndex', 'AspNetUsers', ['NormalizedEmail'], unique=False)
    op.create_table('Positions',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Description', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('Id', name='PK_Positions')
    )
    op.create_table('NationalCouncils',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Code', sa.NVARCHAR(length=450), autoincrement=False, nullable=True),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Address', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('PhoneNumber', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('EMail', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Fax', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Latitude', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Longitude', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ApplicationUserId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('Id', name='PK_NationalCouncils')
    )
    op.create_table('MaritalStatuses',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('Id', name='PK_MaritalStatuses')
    )
    op.create_table('BranchCouncils',
    sa.Column('Id', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('Code', sa.NVARCHAR(length=450), autoincrement=False, nullable=True),
    sa.Column('Name', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Address', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('PhoneNumber', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('EMail', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Fax', sa.NVARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ApplicationUserId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.Column('StateCouncilId', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['StateCouncilId'], ['StateCouncils.Id'], name='FK_BranchCouncils_StateCouncils_StateCouncilId'),
    sa.PrimaryKeyConstraint('Id', name='PK_BranchCouncils')
    )
    op.create_index('IX_BranchCouncils_StateCouncilId', 'BranchCouncils', ['StateCouncilId'], unique=False)
    op.drop_table('Items')
    op.drop_table('Users')
    op.drop_table('Stores')
    # ### end Alembic commands ###
